#import "../conf.typ": *

== Регулярные выражения

#definition[
  *Регулярные выражения* определяются рекурсивно
  #eq[
    #table(
      align: (center, center),
      columns: 2,
      [*RegEx* $R$], [*Lang* $L_i = L(R_i)$],
      [0], [$emptyset$],
      [1], [$epsilon$],
      [$a, a in Sigma$], [${a}$],
      [$R_1 + R_2$], [$L_1 union L_2$],
      [$R_1 R_2$], [$L_1 L_2$],
      [$R^*$], [$L^*$],
    )
  ]
]

#definition[
  *Регулярный автомат* -- НКА, в котором на рёбрах записаны регулярные выражения.
]

#theorem("Клини")[
  Множество регулярных языков совпадает с множеством автоматных языков
]

#proof[
  Регулярные $subset.eq$ Автоматные

  Доказывается индукцией по построению выражения, осуществим благодаря замкнутости автоматных языков относительно операций, доказанных ранее.

  Автоматные $subset.eq$ Регулярные
  Доказывается алгоритмом построения регулярного выражения по автомату
]

#note("Алгоритм построения регулярного выражения по регулярному автомату")[

  В начале приведём автомат к виду с 1 завершающим состоянием (сольём все по $epsilon$ в одно).
  - База: #grid(
      align: center,
      columns: 2,
      image("../assets/baseRegex1.png"),
      image("../assets/baseRegex2.png")
    )
  - В переходе удаляем нестартовые и незавершающие состояния: #image("../assets/stepRegex.png")
]

